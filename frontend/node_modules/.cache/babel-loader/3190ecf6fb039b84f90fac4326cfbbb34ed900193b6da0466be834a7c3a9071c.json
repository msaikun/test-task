{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maryna\\\\Desktop\\\\test\\\\test-task\\\\frontend\\\\src\\\\modules\\\\pages\\\\AddPlaceModal.tsx\";\nimport { Form, Field, Formik } from 'formik';\nimport { Button, DialogActions, Grid, InputAdornment } from '@mui/material';\nimport { Modal } from '../../components/Modal';\nimport { GoogleMap } from '../../components/GoogleMap';\nimport { Input } from '../../components/Input';\nimport { Rating } from '../../components/Rating';\nimport { addPlaceValidationSchema } from '../../utils/validationSchemas';\nimport { splitCamelCase } from '../../utils/commonFunctions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formFields = [{\n  name: 'name'\n}, {\n  name: 'description'\n}, {\n  name: 'price',\n  type: 'number',\n  InputProps: {\n    startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n      position: \"start\",\n      children: \"$\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }\n}, {\n  name: 'formattedAddress'\n}];\nconst initialValues = {\n  name: '',\n  description: '',\n  price: 0,\n  formattedAddress: '',\n  rating: 0,\n  location: {},\n  photos: []\n};\nexport const AddPlaceModal = ({\n  open,\n  handleClose,\n  handleSubmit\n}) => {\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: \"Add New Place\",\n    open: open,\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      validateOnChange: true,\n      initialValues: initialValues,\n      validationSchema: addPlaceValidationSchema,\n      onSubmit: handleSubmit,\n      children: ({\n        setFieldValue,\n        values\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(GoogleMap, {\n          width: \"100%\",\n          height: \"200px\",\n          places: [],\n          errorMsg: !values.location.lat ? 'Please select place' : '',\n          onMapClick: value => setFieldValue('location', value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          marginTop: 2,\n          children: formFields.map(field => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              ...field,\n              label: splitCamelCase(field.name),\n              name: field.name,\n              type: field.type || 'text',\n              placeholder: `Enter ${splitCamelCase(field.name)}`,\n              component: Input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            name: \"rating\",\n            component: Rating,\n            onChange: value => setFieldValue('rating', value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_c = AddPlaceModal;\nvar _c;\n$RefreshReg$(_c, \"AddPlaceModal\");","map":{"version":3,"names":["Form","Field","Formik","Button","DialogActions","Grid","InputAdornment","Modal","GoogleMap","Input","Rating","addPlaceValidationSchema","splitCamelCase","jsxDEV","_jsxDEV","formFields","name","type","InputProps","startAdornment","position","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","description","price","formattedAddress","rating","location","photos","AddPlaceModal","open","handleClose","handleSubmit","title","validateOnChange","validationSchema","onSubmit","setFieldValue","values","width","height","places","errorMsg","lat","onMapClick","value","container","spacing","marginTop","map","field","item","xs","label","placeholder","component","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Maryna/Desktop/test/test-task/frontend/src/modules/pages/AddPlaceModal.tsx"],"sourcesContent":["import { Form, Field, Formik }                         from 'formik';\r\nimport { Button, DialogActions, Grid, InputAdornment } from '@mui/material';\r\n\r\nimport { TAddFormValues }           from './AllPlacesPage';\r\nimport { Modal }                    from '../../components/Modal';\r\nimport { GoogleMap }                from '../../components/GoogleMap';\r\nimport { Input }                    from '../../components/Input';\r\nimport { Rating }                   from '../../components/Rating';\r\nimport { ILocation }                from '../../utils/types';\r\nimport { addPlaceValidationSchema } from '../../utils/validationSchemas';\r\nimport { splitCamelCase }           from '../../utils/commonFunctions';\r\n\r\ninterface IAddPlaceModalProps {\r\n  open         : boolean;\r\n  handleClose  : () => void;\r\n  handleSubmit : (val: TAddFormValues) => void;\r\n}\r\n\r\nconst formFields = [\r\n  { name: 'name' },\r\n  { name: 'description' },\r\n  {\r\n    name: 'price',\r\n    type: 'number',\r\n    InputProps: {\r\n      startAdornment: (\r\n        <InputAdornment position=\"start\">$</InputAdornment>\r\n      ),\r\n    }\r\n  },\r\n  { name: 'formattedAddress' },\r\n];\r\n\r\nconst initialValues = {\r\n  name             : '',\r\n  description      : '',\r\n  price            : 0,\r\n  formattedAddress : '',\r\n  rating           : 0,\r\n  location         : {},\r\n  photos           : [],\r\n};\r\n\r\nexport const AddPlaceModal = ({ open, handleClose, handleSubmit }: IAddPlaceModalProps) => {\r\n\r\n  return (\r\n    <Modal title=\"Add New Place\" open={open}>\r\n      <Formik\r\n        validateOnChange\r\n        initialValues    = {initialValues}\r\n        validationSchema = {addPlaceValidationSchema}\r\n        onSubmit         = {handleSubmit}\r\n      >\r\n        {({ setFieldValue, values }) => (\r\n          <Form>\r\n            <GoogleMap\r\n              width      = \"100%\"\r\n              height     = \"200px\"\r\n              places     = {[]}\r\n              errorMsg   = {!values.location.lat ? 'Please select place' : ''}\r\n              onMapClick = {(value) => setFieldValue('location', value)}\r\n            />\r\n\r\n            <Grid container spacing={2} marginTop={2}>\r\n              {formFields.map((field) => (\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    {...field}\r\n                    label       = {splitCamelCase(field.name)}\r\n                    name        = {field.name}\r\n                    type        = {field.type || 'text'}\r\n                    placeholder = {`Enter ${splitCamelCase(field.name) }`}\r\n                    component   = {Input}\r\n                  />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Field\r\n                name      = \"rating\"\r\n                component = {Rating}\r\n                onChange  = {(value: number) => setFieldValue('rating', value)}\r\n              />\r\n            </Grid>\r\n\r\n            <DialogActions>\r\n              <Button onClick={handleClose}>Cancel</Button>\r\n              <Button type=\"submit\">Save</Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}