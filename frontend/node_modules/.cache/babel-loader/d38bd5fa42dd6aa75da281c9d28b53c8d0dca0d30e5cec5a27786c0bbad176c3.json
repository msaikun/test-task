{"ast":null,"code":"import { enqueueSnackbar } from 'notistack';\nimport { apiCaller } from './apiCaller';\nimport { commonErrorHandler } from './commonFunctions';\nexport const getAllPlaces = async data => {\n  try {\n    const response = await apiCaller('places', {\n      data\n    });\n    return response.data;\n  } catch (error) {\n    commonErrorHandler(error);\n  }\n};\nexport const getPlaceById = async id => {\n  try {\n    const response = await apiCaller(`places/${id}`);\n    return response.data;\n  } catch (error) {\n    commonErrorHandler(error);\n  }\n};\nexport const addNewPlace = async data => {\n  try {\n    await apiCaller('places', {\n      method: 'POST',\n      data\n    });\n    enqueueSnackbar('Place was successfully added', {\n      variant: 'success'\n    });\n  } catch (error) {\n    commonErrorHandler(error);\n  }\n};\nexport const deletePlace = async id => {\n  try {\n    enqueueSnackbar('Place was successfully deleted', {\n      variant: 'success'\n    });\n  } catch (error) {\n    commonErrorHandler(error);\n  }\n};","map":{"version":3,"names":["enqueueSnackbar","apiCaller","commonErrorHandler","getAllPlaces","data","response","error","getPlaceById","id","addNewPlace","method","variant","deletePlace"],"sources":["C:/Users/Maryna/Desktop/test/test-task/frontend/src/utils/requests.ts"],"sourcesContent":["import { enqueueSnackbar } from 'notistack';\r\n\r\nimport { apiCaller }          from './apiCaller';\r\nimport { commonErrorHandler } from './commonFunctions';\r\nimport { IPlace, IViewport }  from './types';\r\n\r\nexport const getAllPlaces = async (data: IViewport) => {\r\n  try {\r\n    const response = await apiCaller('places', { data });\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    commonErrorHandler(error);\r\n  }\r\n};\r\n\r\nexport const getPlaceById = async (id: string) => {\r\n  try {\r\n    const response = await apiCaller<Promise<IPlace>>(`places/${id}`);\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    commonErrorHandler(error);\r\n  }\r\n}\r\n\r\nexport const addNewPlace = async (data: Omit<IPlace, 'id'>) => {\r\n  try {\r\n    await apiCaller('places', { method: 'POST', data })\r\n    enqueueSnackbar('Place was successfully added', { variant: 'success' });\r\n  } catch (error) {\r\n    commonErrorHandler(error);\r\n  }\r\n};\r\n\r\nexport const deletePlace = async (id: string) => {\r\n  try {\r\n    enqueueSnackbar('Place was successfully deleted', { variant: 'success' });\r\n  } catch (error) {\r\n    commonErrorHandler(error);\r\n  }\r\n};\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,WAAW;AAE3C,SAASC,SAAS,QAAiB,aAAa;AAChD,SAASC,kBAAkB,QAAQ,mBAAmB;AAGtD,OAAO,MAAMC,YAAY,GAAG,MAAOC,IAAe,IAAK;EACrD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,SAAS,CAAC,QAAQ,EAAE;MAAEG;IAAK,CAAC,CAAC;IAEpD,OAAOC,QAAQ,CAACD,IAAI;EACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdJ,kBAAkB,CAACI,KAAK,CAAC;EAC3B;AACF,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAOC,EAAU,IAAK;EAChD,IAAI;IACF,MAAMH,QAAQ,GAAG,MAAMJ,SAAS,CAAmB,UAASO,EAAG,EAAC,CAAC;IAEjE,OAAOH,QAAQ,CAACD,IAAI;EACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdJ,kBAAkB,CAACI,KAAK,CAAC;EAC3B;AACF,CAAC;AAED,OAAO,MAAMG,WAAW,GAAG,MAAOL,IAAwB,IAAK;EAC7D,IAAI;IACF,MAAMH,SAAS,CAAC,QAAQ,EAAE;MAAES,MAAM,EAAE,MAAM;MAAEN;IAAK,CAAC,CAAC;IACnDJ,eAAe,CAAC,8BAA8B,EAAE;MAAEW,OAAO,EAAE;IAAU,CAAC,CAAC;EACzE,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdJ,kBAAkB,CAACI,KAAK,CAAC;EAC3B;AACF,CAAC;AAED,OAAO,MAAMM,WAAW,GAAG,MAAOJ,EAAU,IAAK;EAC/C,IAAI;IACFR,eAAe,CAAC,gCAAgC,EAAE;MAAEW,OAAO,EAAE;IAAU,CAAC,CAAC;EAC3E,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdJ,kBAAkB,CAACI,KAAK,CAAC;EAC3B;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}