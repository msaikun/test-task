{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maryna\\\\Desktop\\\\test\\\\test-task\\\\frontend\\\\src\\\\components\\\\GoogleMap.tsx\",\n  _s = $RefreshSig$();\nimport GoogleMapReact from 'google-map-react';\nimport { useCallback, useRef } from 'react';\nimport styled from 'styled-components';\nimport { getBoundaries, getInfoWindowString } from '../utils/commonFunctions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_PLACEMENT = {\n  lat: 34.0828183,\n  lng: -118.3241586\n};\nexport const GoogleMap = ({\n  width,\n  height,\n  places,\n  errorMsg = '',\n  openManyInfoWindows = false,\n  zoom = 10,\n  onMapClick,\n  onMapSizeChange,\n  ...props\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const markerRef = useRef(null);\n  const handleApiLoaded = useCallback((map, maps, places) => {\n    const markers = [];\n    const allInfoWindows = [];\n    const openInfoWindows = [];\n    mapRef.current = map;\n    places.forEach(place => {\n      const marker = new maps.Marker({\n        position: {\n          lat: place.location.lat,\n          lng: place.location.lng\n        },\n        map\n      });\n      const infowindow = new maps.InfoWindow({\n        content: getInfoWindowString(place)\n      });\n      markers.push(marker);\n      allInfoWindows.push(infowindow);\n      marker.addListener('click', () => {\n        if (!openManyInfoWindows) {\n          openInfoWindows.forEach(infoWindow => infoWindow.close());\n          openInfoWindows.length = 0;\n        }\n        infowindow.open(map, marker);\n        openInfoWindows.push(infowindow);\n      });\n      infowindow.addListener('closeclick', () => {\n        const index = openInfoWindows.indexOf(infowindow);\n        if (index !== -1) {\n          openInfoWindows.splice(index, 1);\n        }\n      });\n    });\n    if (!onMapClick && onMapSizeChange) {\n      const boundaries = getBoundaries(map, zoom);\n      onMapSizeChange(boundaries.northeast, boundaries.southwest);\n    }\n  }, [mapRef, openManyInfoWindows, onMapClick, onMapSizeChange]);\n  const handleMapClick = useCallback(({\n    lat,\n    lng\n  }) => {\n    if (places.length) return;\n    if (markerRef.current) {\n      markerRef.current.setMap(null);\n    }\n    ;\n    if (onMapClick) {\n      onMapClick({\n        lat,\n        lng\n      });\n    }\n    ;\n    const marker = new window.google.maps.Marker({\n      position: {\n        lat,\n        lng\n      },\n      map: mapRef.current\n    });\n    markerRef.current = marker;\n    return marker;\n  }, [places, markerRef, mapRef, zoom]);\n  return /*#__PURE__*/_jsxDEV(GoogleMap.Wrapper, {\n    width: width,\n    height: height,\n    children: [/*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      ...props,\n      yesIWantToUseGoogleMapApiInternals: true,\n      defaultCenter: DEFAULT_PLACEMENT,\n      defaultZoom: zoom,\n      onChange: ({\n        bounds: {\n          ne,\n          sw\n        }\n      }) => onMapSizeChange === null || onMapSizeChange === void 0 ? void 0 : onMapSizeChange({\n        lat: ne.lat,\n        lng: ne.lng\n      }, {\n        lat: sw.lat,\n        lng: sw.lng\n      }),\n      onClick: handleMapClick,\n      onGoogleApiLoaded: ({\n        map,\n        maps\n      }) => handleApiLoaded(map, maps, places),\n      bootstrapURLKeys: {\n        key: process.env.REACT_APP_GOOGLE_API_KEY || ''\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap.Error, {\n      children: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleMap, \"6UuXPY1UbrHOLlcHfXgIsbrQsSg=\");\n_c = GoogleMap;\nGoogleMap.Wrapper = styled.div`\n  width  : ${({\n  width\n}) => width || '60%'};\n  height : ${({\n  height\n}) => height || '100vh'};\n`;\nGoogleMap.Error = styled.div`\n  color     : red;\n  font-size : 10px;\n`;\nvar _c;\n$RefreshReg$(_c, \"GoogleMap\");","map":{"version":3,"names":["GoogleMapReact","useCallback","useRef","styled","getBoundaries","getInfoWindowString","jsxDEV","_jsxDEV","DEFAULT_PLACEMENT","lat","lng","GoogleMap","width","height","places","errorMsg","openManyInfoWindows","zoom","onMapClick","onMapSizeChange","props","_s","mapRef","markerRef","handleApiLoaded","map","maps","markers","allInfoWindows","openInfoWindows","current","forEach","place","marker","Marker","position","location","infowindow","InfoWindow","content","push","addListener","infoWindow","close","length","open","index","indexOf","splice","boundaries","northeast","southwest","handleMapClick","setMap","window","google","Wrapper","children","yesIWantToUseGoogleMapApiInternals","defaultCenter","defaultZoom","onChange","bounds","ne","sw","onClick","onGoogleApiLoaded","bootstrapURLKeys","key","process","env","REACT_APP_GOOGLE_API_KEY","fileName","_jsxFileName","lineNumber","columnNumber","Error","_c","div","$RefreshReg$"],"sources":["C:/Users/Maryna/Desktop/test/test-task/frontend/src/components/GoogleMap.tsx"],"sourcesContent":["import GoogleMapReact, { Props as GoogleMapReactProps } from 'google-map-react';\r\nimport { useCallback, useRef }                          from 'react';\r\nimport styled                                           from 'styled-components';\r\n\r\nimport { ILocation, IPlace }                  from '../utils/types';\r\nimport { getBoundaries, getInfoWindowString } from '../utils/commonFunctions';\r\n\r\nconst DEFAULT_PLACEMENT = { lat: 34.0828183, lng: -118.3241586 };\r\n\r\ninterface IGoogleMapProps {\r\n  places               : IPlace[];\r\n  zoom?                : number;\r\n  height?              : string;\r\n  width?               : string;\r\n  errorMsg?            : string;\r\n  openManyInfoWindows? : boolean;\r\n  onMapSizeChange?     : (northeast: ILocation, southwest: ILocation) => void;\r\n  onMapClick?          : (values: ILocation) => void;\r\n}\r\n\r\nexport const GoogleMap = ({\r\n  width,\r\n  height,\r\n  places,\r\n  errorMsg            = '',\r\n  openManyInfoWindows = false,\r\n  zoom                = 10,\r\n  onMapClick,\r\n  onMapSizeChange,\r\n  ...props\r\n}: IGoogleMapProps & GoogleMapReactProps) => {\r\n  const mapRef    = useRef<google.maps.Map | null>(null);\r\n  const markerRef = useRef<google.maps.Marker | null>(null);\r\n\r\n  const handleApiLoaded = useCallback((\r\n    map    : google.maps.Map,\r\n    maps   : typeof google.maps,\r\n    places : IPlace[],\r\n  ) => {\r\n    const markers         : google.maps.Marker[] = [];\r\n    const allInfoWindows  : google.maps.InfoWindow[] = [];\r\n    const openInfoWindows : google.maps.InfoWindow[] = [];\r\n\r\n    mapRef.current = map;\r\n\r\n    places.forEach((place) => {\r\n      const marker = new maps.Marker({\r\n        position: {\r\n          lat: place.location.lat,\r\n          lng: place.location.lng,\r\n        },\r\n        map,\r\n      });\r\n\r\n      const infowindow = new maps.InfoWindow({ content: getInfoWindowString(place) });\r\n\r\n      markers.push(marker);\r\n      allInfoWindows.push(infowindow);\r\n\r\n      marker.addListener('click', () => {\r\n        if (!openManyInfoWindows) {\r\n          openInfoWindows.forEach((infoWindow) => infoWindow.close());\r\n          openInfoWindows.length = 0;\r\n        }\r\n\r\n        infowindow.open(map, marker);\r\n        openInfoWindows.push(infowindow);\r\n      });\r\n\r\n      infowindow.addListener('closeclick', () => {\r\n        const index = openInfoWindows.indexOf(infowindow);\r\n\r\n        if (index !== -1) {\r\n          openInfoWindows.splice(index, 1);\r\n        }\r\n      });\r\n    });\r\n\r\n    if (!onMapClick && onMapSizeChange) {\r\n      const boundaries = getBoundaries(map, zoom);\r\n      onMapSizeChange(boundaries.northeast, boundaries.southwest);\r\n    }\r\n  }, [mapRef, openManyInfoWindows, onMapClick, onMapSizeChange]);\r\n\r\n  const handleMapClick = useCallback(({ lat, lng }: ILocation) => {\r\n    if (places.length) return;\r\n\r\n    if (markerRef.current) {\r\n      markerRef.current.setMap(null);\r\n    };\r\n\r\n    if (onMapClick) {\r\n      onMapClick({ lat, lng });\r\n    };\r\n\r\n    const marker = new window.google.maps.Marker({\r\n      position: { lat, lng },\r\n      map: mapRef.current!,\r\n    });\r\n\r\n    markerRef.current = marker;\r\n\r\n    return marker;\r\n  }, [places, markerRef, mapRef, zoom]);\r\n\r\n  return (\r\n    <GoogleMap.Wrapper width={width} height={height}>\r\n      <GoogleMapReact\r\n        {...props}\r\n        yesIWantToUseGoogleMapApiInternals\r\n        defaultCenter     = {DEFAULT_PLACEMENT}\r\n        defaultZoom       = {zoom}\r\n        onChange          = {({ bounds: { ne, sw }}) => onMapSizeChange?.({ lat: ne.lat, lng: ne.lng }, { lat: sw.lat, lng: sw.lng })}\r\n        onClick           = {handleMapClick}\r\n        onGoogleApiLoaded = {({ map, maps }) => handleApiLoaded(map, maps, places)}\r\n        bootstrapURLKeys  = {{ key: process.env.REACT_APP_GOOGLE_API_KEY || '' }}\r\n      />\r\n\r\n      <GoogleMap.Error>{errorMsg}</GoogleMap.Error>\r\n    </GoogleMap.Wrapper>\r\n  );\r\n}\r\n\r\nGoogleMap.Wrapper = styled.div<{ width?: string; height?: string }>`\r\n  width  : ${({ width }) => width || '60%'};\r\n  height : ${({ height }) => height || '100vh'};\r\n`;\r\n\r\nGoogleMap.Error = styled.div`\r\n  color     : red;\r\n  font-size : 10px;\r\n`;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}